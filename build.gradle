plugins {
    id 'java-library'
    id 'pmd'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'net.minecrell.plugin-yml.bukkit' version '0.5.3'
}

group = 'com.ravingarinc.combat'
version = '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()

    gradlePluginPortal()

    maven {
        name 'dmulloy2-repo'
        url 'https://repo.dmulloy2.net/repository/public/'
        content {
            includeGroup 'com.comphenix.protocol'
        }
    }

    maven {
        name 'heroes-repo'
        url 'https://nexus.hc.to/content/repositories/pub_releases'
        content {
            includeGroup 'com.herocraftonline.heroes'
        }
    }

    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        name 'phoenix-repo'
        url 'https://nexus.phoenixdevt.fr/repository/maven-public/'
        content {
            includeGroup 'io.lumine'
            includeGroup 'net.Indyuce'
        }
    }

    maven {
        name 'jitpack'
        url "https://jitpack.io"
    }

    maven {
        url = 'https://mvn.lumine.io/repository/maven-public/'
    }
}

dependencies {
    bukkitLibrary 'javax.vecmath:vecmath:1.5.2'
    compileOnly 'org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT'
    compileOnly 'com.herocraftonline.heroes:Heroes:1.9.30-RELEASE'
    compileOnly 'net.Indyuce:MMOItems-API:6.9.2-SNAPSHOT'
    compileOnly 'io.lumine:MythicLib-dist:1.5.2-SNAPSHOT'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'

    bukkitLibrary 'org.jetbrains:annotations:23.1.0'

    implementation("com.github.RAVINGAR.RavinAPI:common:v1.4.3")
    implementation("com.github.RAVINGAR.RavinAPI:module:v1.4.3")
    implementation("com.github.RAVINGAR.RavinAPI:concurrent:v1.4.3")

    testImplementation 'org.jetbrains:annotations:23.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

shadowJar {
    archiveBaseName = "CombatEnhanced"
    archiveClassifier = ""
    archiveVersion = ""
    relocate("com.ravingarinc.api", "com.ravingarinc.combat.libs.api")
}

artifacts {
    archives(shadowJar)
}

tasks.register("copyToDev", Copy) {
    from shadowJar
    into project.layout.projectDirectory.dir("../../Desktop/Programming/Server/plugins")
}

assemble {
    dependsOn(shadowJar)
    finalizedBy("copyToDev")
}

test {
    useJUnitPlatform()
    // Ensure testing is never "up-to-date" (in Gradle-speak), which means it can never be skipped,
    // as it would otherwise be.
    outputs.upToDateWhen { false }

    // Ensure we get all the useful test output.
    testLogging {
        events("failed", "passed", "skipped")
        showExceptions = true
        showCauses = true
        showStackTraces = true
        exceptionFormat = org.gradle.api.tasks.testing.logging.TestExceptionFormat.FULL
    }
}

javadoc {
    options.encoding 'UTF-8'
    options.charSet 'UTF-8'
    options.jFlags('-Xms256m', '-Xmx512m')
    options.addStringOption('Xdoclint:none', '-quiet')
    options.links(
            'https://hub.spigotmc.org/javadocs/spigot/',
            'http://google.github.io/guava/releases/17.0/api/docs/'
    )
}

pmd {
    consoleOutput = true
    toolVersion = '6.41.0'
    rulesMinimumPriority = 5
    ruleSets = []
    ruleSetFiles = files('pmd-rules.xml')
}

bukkit {
    // Default values can be overridden if needed
    // name = 'TestPlugin'
    // version = '1.0'
    // description = 'This is a test plugin'
    // website = 'https://example.com'
    // author = 'Notch'

    name = 'CombatEnhanced'
    version = project.version
    description = 'Feature plugin for enhanced combat!'
    main = 'com.ravingarinc.combat.CombatEnhanced'

    // API version (should be set for 1.13+)
    apiVersion = '1.18'

    // Other possible properties from plugin.yml (optional)
    author = 'RAVINGAR'
    defaultPermission = 'FALSE' // 'TRUE', 'FALSE', 'OP' or 'NOT_OP'

    commands {
        combatreload {
            description = 'Reloads the CombatEnhanced plugin'
            usage = '/combatreload'
            permission = 'combat.reload'
        }
    }
}
